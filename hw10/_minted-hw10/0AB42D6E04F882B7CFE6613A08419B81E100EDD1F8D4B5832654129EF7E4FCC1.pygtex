\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cm}{/************************************}
\PYG{c+cm}{ *   Homework Number:   10          *}
\PYG{c+cm}{ *   Name:              Yi Qiao     *}
\PYG{c+cm}{ *   ECN Login:         qiao22      *}
\PYG{c+cm}{ *   Due Date:          4/4/2019    *}
\PYG{c+cm}{ ************************************/}

\PYG{c+cm}{/*}
\PYG{c+cm}{/ file : server.c}
\PYG{c+cm}{/\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{c+cm}{/ This is a server socket program that echos recieved messages}
\PYG{c+cm}{/ from the client.c program.  Run the server on one of the ECN}
\PYG{c+cm}{/ machines and the client on your laptop.}
\PYG{c+cm}{*/}

\PYG{c+c1}{// For compiling this file:}
\PYG{c+c1}{//        Linux:               gcc server.c \PYGZhy{}o server}
\PYG{c+c1}{//        Solaris:             gcc server.c \PYGZhy{}o server \PYGZhy{}lsocket}

\PYG{c+c1}{// For running the server program:}
\PYG{c+c1}{//}
\PYG{c+c1}{//                server 9000}
\PYG{c+c1}{//}
\PYG{c+c1}{// where 9000 is the port you want your server to monitor.  Of course,}
\PYG{c+c1}{// this can be any high\PYGZhy{}numbered that is not currently being used by others.}

\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}stdio.h\PYGZgt{} }
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}stdlib.h\PYGZgt{} }
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}errno.h\PYGZgt{} }
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}string.h\PYGZgt{} }
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}sys/types.h\PYGZgt{} }
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}netinet/in.h\PYGZgt{} }
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}sys/socket.h\PYGZgt{} }
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}sys/wait.h\PYGZgt{} }
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}arpa/inet.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}unistd.h\PYGZgt{}}

\PYG{c+cp}{\PYGZsh{}define MAX\PYGZus{}PENDING 10     }\PYG{c+cm}{/* maximun \PYGZsh{} of pending for connection */}
\PYG{c+cp}{\PYGZsh{}define MAX\PYGZus{}DATA\PYGZus{}SIZE 5}

\PYG{k+kt}{int} \PYG{n+nf}{DataPrint}\PYG{p}{(}\PYG{k+kt}{char} \PYG{o}{*}\PYG{n}{recvBuff}\PYG{p}{,} \PYG{k+kt}{int} \PYG{n}{numBytes}\PYG{p}{);}
\PYG{k+kt}{char}\PYG{o}{*} \PYG{n+nf}{clientComm}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{clntSockfd}\PYG{p}{,}\PYG{k+kt}{int} \PYG{o}{*} \PYG{n}{senderBuffSize\PYGZus{}addr}\PYG{p}{,} \PYG{k+kt}{int} \PYG{o}{*} \PYG{n}{optlen\PYGZus{}addr}\PYG{p}{);} 

\PYG{k+kt}{int} \PYG{n+nf}{main}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{argc}\PYG{p}{,} \PYG{k+kt}{char} \PYG{o}{*}\PYG{n}{argv}\PYG{p}{[])}
\PYG{p}{\PYGZob{}}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{argc} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{2}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{n}{fprintf}\PYG{p}{(}\PYG{n}{stderr}\PYG{p}{,}\PYG{l+s}{\PYGZdq{}ERROR, no port provided}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{);}
    \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}
    \PYG{k+kt}{int} \PYG{n}{PORT} \PYG{o}{=} \PYG{n}{atoi}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]);}



    \PYG{k+kt}{int} \PYG{n}{senderBuffSize}\PYG{p}{;}
    \PYG{k+kt}{int} \PYG{n}{servSockfd}\PYG{p}{,} \PYG{n}{clntSockfd}\PYG{p}{;}  
    \PYG{k}{struct} \PYG{n}{sockaddr\PYGZus{}in} \PYG{n}{sevrAddr}\PYG{p}{;}    
    \PYG{k}{struct} \PYG{n}{sockaddr\PYGZus{}in} \PYG{n}{clntAddr}\PYG{p}{;} 
    \PYG{k+kt}{int} \PYG{n}{clntLen}\PYG{p}{;}
    \PYG{k+kt}{socklen\PYGZus{}t} \PYG{n}{optlen} \PYG{o}{=} \PYG{k}{sizeof} \PYG{n}{senderBuffSize}\PYG{p}{;}

    \PYG{c+cm}{/* make socket */}
    \PYG{k}{if} \PYG{p}{((}\PYG{n}{servSockfd} \PYG{o}{=} \PYG{n}{socket}\PYG{p}{(}\PYG{n}{AF\PYGZus{}INET}\PYG{p}{,} \PYG{n}{SOCK\PYGZus{}STREAM}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{))} \PYG{o}{==} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{n}{perror}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}sock failed\PYGZdq{}}\PYG{p}{);}
        \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}

    \PYG{c+cm}{/* set IP address and port */}
    \PYG{n}{sevrAddr}\PYG{p}{.}\PYG{n}{sin\PYGZus{}family} \PYG{o}{=} \PYG{n}{AF\PYGZus{}INET}\PYG{p}{;}       
    \PYG{n}{sevrAddr}\PYG{p}{.}\PYG{n}{sin\PYGZus{}port} \PYG{o}{=} \PYG{n}{htons}\PYG{p}{(}\PYG{n}{PORT}\PYG{p}{);}     
    \PYG{n}{sevrAddr}\PYG{p}{.}\PYG{n}{sin\PYGZus{}addr}\PYG{p}{.}\PYG{n}{s\PYGZus{}addr} \PYG{o}{=} \PYG{n}{INADDR\PYGZus{}ANY}\PYG{p}{;}
    \PYG{n}{bzero}\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{p}{(}\PYG{n}{sevrAddr}\PYG{p}{.}\PYG{n}{sin\PYGZus{}zero}\PYG{p}{),} \PYG{l+m+mi}{8}\PYG{p}{);}       

    \PYG{k}{if} \PYG{p}{(}\PYG{n}{bind}\PYG{p}{(}\PYG{n}{servSockfd}\PYG{p}{,} \PYG{p}{(}\PYG{k}{struct} \PYG{n}{sockaddr} \PYG{o}{*}\PYG{p}{)}\PYG{o}{\PYGZam{}}\PYG{n}{sevrAddr}\PYG{p}{,} 
                \PYG{k}{sizeof}\PYG{p}{(}\PYG{k}{struct} \PYG{n}{sockaddr}\PYG{p}{))} \PYG{o}{==} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{n}{perror}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}bind failed\PYGZdq{}}\PYG{p}{);}
        \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}

    \PYG{k}{if} \PYG{p}{(}\PYG{n}{listen}\PYG{p}{(}\PYG{n}{servSockfd}\PYG{p}{,} \PYG{n}{MAX\PYGZus{}PENDING}\PYG{p}{)} \PYG{o}{==} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{n}{perror}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}listen failed\PYGZdq{}}\PYG{p}{);}
        \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}

    \PYG{k}{while}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{n}{clntLen} \PYG{o}{=} \PYG{k}{sizeof}\PYG{p}{(}\PYG{k}{struct} \PYG{n}{sockaddr\PYGZus{}in}\PYG{p}{);}
        \PYG{k}{if} \PYG{p}{((}\PYG{n}{clntSockfd} \PYG{o}{=} \PYG{n}{accept}\PYG{p}{(}\PYG{n}{servSockfd}\PYG{p}{,} \PYG{p}{(}\PYG{k}{struct} \PYG{n}{sockaddr} \PYG{o}{*}\PYG{p}{)} \PYG{o}{\PYGZam{}}\PYG{n}{clntAddr}\PYG{p}{,} \PYG{o}{\PYGZam{}}\PYG{n}{clntLen}\PYG{p}{))} \PYG{o}{==} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{n}{perror}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}accept failed\PYGZdq{}}\PYG{p}{);}
            \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
        \PYG{p}{\PYGZcb{}}

        \PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Connected from \PYGZpc{}s}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,} \PYG{n}{inet\PYGZus{}ntoa}\PYG{p}{(}\PYG{n}{clntAddr}\PYG{p}{.}\PYG{n}{sin\PYGZus{}addr}\PYG{p}{));}

        \PYG{k}{if} \PYG{p}{(}\PYG{n}{send}\PYG{p}{(}\PYG{n}{clntSockfd}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}Connected!!!}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,} \PYG{n}{strlen}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Connected!!!}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{),} \PYG{l+m+mi}{0}\PYG{p}{)} \PYG{o}{==} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{n}{perror}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}send failed\PYGZdq{}}\PYG{p}{);}
            \PYG{n}{close}\PYG{p}{(}\PYG{n}{clntSockfd}\PYG{p}{);}
            \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
        \PYG{p}{\PYGZcb{}}

        \PYG{c+cm}{/* repeat for one client service */}
        \PYG{k}{while}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{n}{free}\PYG{p}{(}\PYG{n}{clientComm}\PYG{p}{(}\PYG{n}{clntSockfd}\PYG{p}{,} \PYG{o}{\PYGZam{}}\PYG{n}{senderBuffSize}\PYG{p}{,} \PYG{o}{\PYGZam{}}\PYG{n}{optlen}\PYG{p}{));}
        \PYG{p}{\PYGZcb{}}

        \PYG{n}{close}\PYG{p}{(}\PYG{n}{clntSockfd}\PYG{p}{);}  
        \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{char} \PYG{o}{*} \PYG{n+nf}{clientComm}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{clntSockfd}\PYG{p}{,}\PYG{k+kt}{int} \PYG{o}{*} \PYG{n}{senderBuffSize\PYGZus{}addr}\PYG{p}{,} \PYG{k+kt}{int} \PYG{o}{*} \PYG{n}{optlen\PYGZus{}addr}\PYG{p}{)\PYGZob{}}
    \PYG{k+kt}{char} \PYG{o}{*}\PYG{n}{recvBuff}\PYG{p}{;} \PYG{c+cm}{/* recv data buffer */}
    \PYG{k+kt}{int} \PYG{n}{numBytes} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} 
    \PYG{c+c1}{//char str[MAX\PYGZus{}DATA\PYGZus{}SIZE];}
    \PYG{c+cm}{/* recv data from the client */}
    \PYG{n}{getsockopt}\PYG{p}{(}\PYG{n}{clntSockfd}\PYG{p}{,} \PYG{n}{SOL\PYGZus{}SOCKET}\PYG{p}{,}\PYG{n}{SO\PYGZus{}SNDBUF}\PYG{p}{,} \PYG{n}{senderBuffSize\PYGZus{}addr}\PYG{p}{,} \PYG{n}{optlen\PYGZus{}addr}\PYG{p}{);} \PYG{c+cm}{/* check sender buffer size */}
    \PYG{n}{recvBuff} \PYG{o}{=} \PYG{n}{malloc}\PYG{p}{((}\PYG{o}{*}\PYG{n}{senderBuffSize\PYGZus{}addr}\PYG{p}{)} \PYG{o}{*} \PYG{k}{sizeof} \PYG{p}{(}\PYG{k+kt}{char}\PYG{p}{));}
	
    \PYG{k}{if} \PYG{p}{((}\PYG{n}{numBytes} \PYG{o}{=} \PYG{n}{recv}\PYG{p}{(}\PYG{n}{clntSockfd}\PYG{p}{,} \PYG{n}{recvBuff}\PYG{p}{,} \PYG{o}{*}\PYG{n}{senderBuffSize\PYGZus{}addr}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{))} \PYG{o}{==} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{n}{perror}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}recv failed\PYGZdq{}}\PYG{p}{);}
        \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}

    \PYG{n}{recvBuff}\PYG{p}{[}\PYG{n}{numBytes}\PYG{p}{]} \PYG{o}{=} \PYG{l+s+sc}{\PYGZsq{}\PYGZbs{}0\PYGZsq{}}\PYG{p}{;}
    \PYG{k}{if}\PYG{p}{(}\PYG{n}{DataPrint}\PYG{p}{(}\PYG{n}{recvBuff}\PYG{p}{,} \PYG{n}{numBytes}\PYG{p}{))\PYGZob{}}
        \PYG{n}{fprintf}\PYG{p}{(}\PYG{n}{stderr}\PYG{p}{,}\PYG{l+s}{\PYGZdq{}ERROR, no way to print out}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{);}
        \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}    

    \PYG{c+c1}{//strcpy(str, recvBuff);}
	
    \PYG{c+cm}{/* send data to the client */}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{send}\PYG{p}{(}\PYG{n}{clntSockfd}\PYG{p}{,} \PYG{n}{recvBuff}\PYG{p}{,} \PYG{n}{strlen}\PYG{p}{(}\PYG{n}{recvBuff}\PYG{p}{),} \PYG{l+m+mi}{0}\PYG{p}{)} \PYG{o}{==} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{n}{perror}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}send failed\PYGZdq{}}\PYG{p}{);}
        \PYG{n}{close}\PYG{p}{(}\PYG{n}{clntSockfd}\PYG{p}{);}
        \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}


    \PYG{k}{return} \PYG{n}{recvBuff}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n+nf}{secretFunction}\PYG{p}{()\PYGZob{}}
    \PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}You weren\PYGZsq{}t supposed to get here!}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{);}
    \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{int} \PYG{n+nf}{DataPrint}\PYG{p}{(}\PYG{k+kt}{char} \PYG{o}{*}\PYG{n}{recvBuff}\PYG{p}{,} \PYG{k+kt}{int} \PYG{n}{numBytes}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}RECEIVED: \PYGZpc{}s\PYGZdq{}}\PYG{p}{,} \PYG{n}{recvBuff}\PYG{p}{);}
    \PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}RECEIVED BYTES: \PYGZpc{}d}\PYG{l+s+se}{\PYGZbs{}n\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,} \PYG{n}{numBytes}\PYG{p}{);}
    \PYG{k}{return}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
